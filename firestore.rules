rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role.
    function isAdmin() {
      let userRoles = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles;
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             'admin' in userRoles;
    }

    // =================================================================
    // Publicly Readable Collections for Landing Page
    // =================================================================
    match /landing_updates/{docId} {
      allow read: if true;
      allow write: if isAdmin(); // Only admins can write updates
    }

    match /cached_stats/{docId} {
      allow read: if true;
      allow write: if false; // Stats are updated by backend functions, not clients
    }

    // =================================================================
    // Collection: dpo_entries
    // =================================================================
    match /dpo_entries/{entry} {
      // Any authenticated user can read.
      allow read: if request.auth != null;
      // Only admins can create, update, or delete.
      allow write: if isAdmin();
    }

    // =================================================================
    // Collection: users
    // =================================================================
    match /users/{userId} {
      // A user can read their own data. Admins can read any user's data.
      allow read: if request.auth.uid == userId || isAdmin();
      // A user can update their own data. Admins can update any user's data.
      allow write: if request.auth.uid == userId || isAdmin();
    }

    // =================================================================
    // Collection: admin_settings
    // =================================================================
    match /admin_settings/{config} {
      // Only admins can read or write settings.
      allow read, write: if isAdmin();
    }

    // By default, all other collections are locked down.
    // Add specific rules for other collections as needed.
  }

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules
    match /{document=**} {
      allow read, write: if request.time < timestamp.date(2025, 7, 12);
    }

}
